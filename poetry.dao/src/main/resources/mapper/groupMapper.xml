<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="com.poetry.pojo.Do.groupDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cover_path" jdbcType="VARCHAR" property="coverPath" />
    <result column="group_intro" jdbcType="VARCHAR" property="groupIntro" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, cover_path, group_intro, create_time, name, creator_id
  </sql>

  <sql id="Column_List_Without_userId">
    id, cover_path, group_intro, create_time, name
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from groups
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from groups
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.poetry.pojo.Do.groupDo">
    insert into groups (id, cover_path, group_intro,
      create_time, name, creator_id
      )
    values (#{id,jdbcType=INTEGER}, #{coverPath,jdbcType=VARCHAR}, #{groupIntro,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.poetry.pojo.Do.groupDo">
    insert into groups
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coverPath != null">
        cover_path,
      </if>
      <if test="groupIntro != null">
        group_intro,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coverPath != null">
        #{coverPath,jdbcType=VARCHAR},
      </if>
      <if test="groupIntro != null">
        #{groupIntro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poetry.pojo.Do.groupDo">
    update groups
    <set>
      <if test="coverPath != null">
        cover_path = #{coverPath,jdbcType=VARCHAR},
      </if>
      <if test="groupIntro != null">
        group_intro = #{groupIntro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poetry.pojo.Do.groupDo">
    update groups
    set cover_path = #{coverPath,jdbcType=VARCHAR},
      group_intro = #{groupIntro,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listGroupDo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from groups order by create_time desc
  </select>

  <select id="selectAffiliationGroups" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Column_List_Without_userId" /> from groups where groups.id in
    (select gu.group_id from group_user as gu where gu.ueser_id = #{userId,jdbcType=VARCHAR})
  </select>

  <select id="selectMyFoundingGroups" resultMap="BaseResultMap">
    select <include refid="Column_List_Without_userId" /> from groups where groups.creator_id=#{userId,jdbcType=VARCHAR}
  </select>

  <select id="selectByKeyWord" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Column_List_Without_userId" /> from groups where groups.name like #{keyWord,jdbcType=VARCHAR}
  </select>

  <select id="getGroupMemberNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) from groups where id=#{groupId,jdbcType=INTEGER}
  </select>
</mapper>