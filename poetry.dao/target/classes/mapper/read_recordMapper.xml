<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.ReadRecordMapper">
  <resultMap id="BaseResultMap" type="com.poetry.pojo.Do.read_recordDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="audio_path" jdbcType="VARCHAR" property="audioPath" />
    <result column="likes_num" jdbcType="INTEGER" property="likesNum" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="poem_id" jdbcType="INTEGER" property="poemId" />
    <result column="ueser_id" jdbcType="INTEGER" property="ueserId" />
  </resultMap>

    <resultMap id="RankResultMap" type="com.poetry.pojo.Dto.RankInfoDto">
      <id column="rid" jdbcType="INTEGER" property="videoId" />
      <id column="pid" jdbcType="INTEGER" property="poemId" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
      <result column="poemcol" jdbcType="INTEGER" property="poemName" />
      <result column="avata_path" jdbcType="INTEGER" property="avatarPath" />
    </resultMap>

  <sql id="Base_Column_List">
    id, audio_path, likes_num, time, poem_id, ueser_id
  </sql>

  <sql id="RankInfo_Column_List">
      rr.id as rid,p.id as pid ,u.user_name,p.poemcol,u.avata_path
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from read_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from read_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.poetry.pojo.Do.read_recordDo">
    insert into read_record (id, audio_path, likes_num, 
      time, poem_id, ueser_id
      )
    values (#{id,jdbcType=INTEGER}, #{audioPath,jdbcType=VARCHAR}, #{likesNum,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{poemId,jdbcType=INTEGER}, #{ueserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.poetry.pojo.Do.read_recordDo">
    insert into read_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="audioPath != null">
        audio_path,
      </if>
      <if test="likesNum != null">
        likes_num,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="poemId != null">
        poem_id,
      </if>
      <if test="ueserId != null">
        ueser_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="audioPath != null">
        #{audioPath,jdbcType=VARCHAR},
      </if>
      <if test="likesNum != null">
        #{likesNum,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="poemId != null">
        #{poemId,jdbcType=INTEGER},
      </if>
      <if test="ueserId != null">
        #{ueserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poetry.pojo.Do.read_recordDo">
    update read_record
    <set>
      <if test="audioPath != null">
        audio_path = #{audioPath,jdbcType=VARCHAR},
      </if>
      <if test="likesNum != null">
        likes_num = #{likesNum,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="poemId != null">
        poem_id = #{poemId,jdbcType=INTEGER},
      </if>
      <if test="ueserId != null">
        ueser_id = #{ueserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poetry.pojo.Do.read_recordDo">
    update read_record
    set audio_path = #{audioPath,jdbcType=VARCHAR},
      likes_num = #{likesNum,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      poem_id = #{poemId,jdbcType=INTEGER},
      ueser_id = #{ueserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectRankInfoById" parameterType="java.lang.Integer" resultMap="RankResultMap">
    select   <include refid="RankInfo_Column_List" />
    from  read_record as rr
    inner join user as u
          on u.id=rr.ueser_id
    inner join poem as p
          on p.id=rr.poem_id
    where rr.id=#{id,jdbcType=INTEGER}
  </select>
</mapper>