<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poetry.dao.userMapper">
  <resultMap id="BaseResultMap" type="com.poetry.pojo.Do.userDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gold_coin_num" jdbcType="INTEGER" property="goldCoinNum" />
    <result column="experience_val" jdbcType="INTEGER" property="experienceVal" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avata_path" jdbcType="VARCHAR" property="avataPath" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, password, gold_coin_num, experience_val, sex, avata_path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.poetry.pojo.Do.userDo">
    insert into user (id, user_name, password, 
      gold_coin_num, experience_val, sex, 
      avata_path)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{goldCoinNum,jdbcType=INTEGER}, #{experienceVal,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, 
      #{avataPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.poetry.pojo.Do.userDo">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="goldCoinNum != null">
        gold_coin_num,
      </if>
      <if test="experienceVal != null">
        experience_val,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avataPath != null">
        avata_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="goldCoinNum != null">
        #{goldCoinNum,jdbcType=INTEGER},
      </if>
      <if test="experienceVal != null">
        #{experienceVal,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="avataPath != null">
        #{avataPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poetry.pojo.Do.userDo">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="goldCoinNum != null">
        gold_coin_num = #{goldCoinNum,jdbcType=INTEGER},
      </if>
      <if test="experienceVal != null">
        experience_val = #{experienceVal,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="avataPath != null">
        avata_path = #{avataPath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poetry.pojo.Do.userDo">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gold_coin_num = #{goldCoinNum,jdbcType=INTEGER},
      experience_val = #{experienceVal,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      avata_path = #{avataPath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>